Story: Parsing AMI

	As an Asterisk user
	I want to parse the AMI protocol
	So that I can control Asterisk
	
	
	TODO:
	- Ensure misc key/value pairs are is set exactly properly
	- Have a chop_buffer_for_new_data_of_size() method which kills old pointer-related variables
	
	Scenario: Parsing only the initial AMI version header
	
		Given a new parser
		And a version header for AMI 1.0
		
		When I parse the protocol
		
		Then the protocol should have parsed without syntax errors
		And the version should be set to 1.0
	
	Scenario: Parsing the initial AMI header and a login attempt
	
		Given a new parser
		And a version header for AMI 1.0
		And a normal login attempt with events
		
		Then the protocol should have parsed without syntax errors
	
	Scenario: Parsing the initial AMI header and then a Response:Follows section
	
		Given a new parser
		And a version header for AMI 1.0
		And a multi-line Response:Follows body of ragel_description
		
		Then the protocol should have parsed without syntax errors
		And the 'follows' body of 1 message received should equal ragel_description
		
		Scenario: Parsing the initial AMI header and then a Response:Follows section

			Given a new parser
			And a version header for AMI 1.0
			And a multi-line Response:Follows body of ragel_description
			And a multi-line Response:Follows body of ragel_description

			Then the protocol should have parsed without syntax errors
			And the 'follows' body of 2 messages received should equal ragel_description